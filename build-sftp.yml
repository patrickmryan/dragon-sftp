#
#
# Build an SFTP server using AWS Transfer.
#
# The only prereq is to have a both files for a key pair, .pem and .pub. The value for
# the SftpUserPublicKey parameters is the content of the .pub file.
#
# patrick.ryan@evanschambers.com
#

AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Parameters for sftp server
        Parameters:
          - VpcId
          - SftpUserName
          - BoundaryPolicyName
          - SftpUserPublicKey
          - CidrRange

    ParameterLabels:
      VpcId:
        default: VPC for the sftp server
      SftpUserName:
        default: Username for when connecting via sftp
      BoundaryPolicyName:
        default: Name of policy used as the boundary for the IAM role
      SftpUserPublicKey:
        default: The public key of the key pair. Will start with ssh-rsa

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId1:
    Type: AWS::EC2::Subnet::Id
  SubnetId2:
    Type: AWS::EC2::Subnet::Id
  SftpUserName:
    Type: String
    Default: uploader
  CidrRange:
    Type: String
  BoundaryPolicyName:
    Type: String
    Default: T_PROJADMIN_U
  SftpUserPublicKey:
    Type: String
    AllowedPattern: '^ssh-rsa.*'

Resources:

  SftpBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'sftp-${AWS::StackName}'
      NotificationConfiguration:
        TopicConfigurations:
        - Topic: !Ref NewObjectSNSTopic
          Event: 's3:ObjectCreated:*'
          # Filter:
          #   S3Key:
          #     Rules:
          #       - Name: prefix
          #         Value:
          #       - Name: suffix
          #         Value: .pdw
          
  
  # SNS topic
  NewObjectSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'new-object-topic-${AWS::StackName}'

  # policy that allows S3 to publish to topic
  AllowS3ToSendToSNS:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref NewObjectSNSTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
            - sns:Publish
            Resource: !Ref NewObjectSNSTopic
            Condition:
              ArnLike:
                aws:SourceArn: !Sub 'arn:${AWS::Partition}:s3:::sftp-${AWS::StackName}'

  # SQS Q
  NewObjectQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub 'new-object-queue-${SftpBucket}'

  # policy that allows SNS to sendMessage to the Q
  NewObjectQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref NewObjectQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
            - sqs:SendMessage
            Resource: !GetAtt NewObjectQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref NewObjectSNSTopic

  # SQS subscription to SNS topic
  SubscribeSQStoNewObjectSNSTopic:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt NewObjectQueue.Arn
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !Ref NewObjectSNSTopic

  AllowedPrefixList:
    Type: AWS::EC2::PrefixList
    Properties: 
      PrefixListName: mission-ridge-uploaders
      AddressFamily: IPv4 
      MaxEntries: 8
      Entries:
        - Cidr: !Ref CidrRange
        # - Cidr: "10.10.0.0/16"
        # - Cidr: "3.235.109.106/32"
      Tags:
        - Key: Name
          Value: !Sub 'allowed-addresses-${AWS::StackName}'

  AllowedSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Addresses allowed to connect to sftp
      SecurityGroupIngress: 
        - SourcePrefixListId: !Ref AllowedPrefixList
          FromPort: 22  # sftp
          ToPort: 22
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub 'allowed-addresses-${AWS::StackName}'
      
  SftpServer:
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: VPC
      EndpointDetails:
        AddressAllocationIds: 
          - !GetAtt SftpPublicIp1.AllocationId
          - !GetAtt SftpPublicIp2.AllocationId
        VpcId: !Ref VpcId
        SubnetIds: 
          - !Ref SubnetId1
          - !Ref SubnetId2
        SecurityGroupIds: 
          - !GetAtt AllowedSecurityGroup.GroupId
      Protocols:
        - SFTP

  SftpPublicIp1:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc

  SftpPublicIp2:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc

  SftpUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'sftp-user-role-${AWS::StackName}'
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - transfer.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${BoundaryPolicyName}'
      Policies:
        - PolicyName: !Sub 'sftp-user-policy-${AWS::StackName}'
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                # Action: 's3:*'
                Action:
                  - s3:Put*
                  # - s3:Get*
                Resource: !Sub '${SftpBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - s3:List*
                Resource: !Sub '${SftpBucket.Arn}'
              - Effect: Allow
                Action: 'events:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource: '*'

  SftpUser:
    Type: AWS::Transfer::User
    DependsOn: SftpBucket
    Properties:
      UserName: !Ref SftpUserName
      Role: !GetAtt SftpUserRole.Arn
      HomeDirectoryType: PATH
      HomeDirectory: !Sub '/${SftpBucket}/${SftpUserName}'
      ServerId: !GetAtt SftpServer.ServerId
      SshPublicKeys:
        - !Ref SftpUserPublicKey

Outputs:
  SftpUserName:
    Value: !Ref SftpUserName
  SftpServerAddress:
    Value: !Sub '${SftpServer.ServerId}.server.transfer.${AWS::Region}.amazonaws.com'
  SftpBucket:
    Value: !Sub 's3://${SftpBucket}'
  NewObjectSNSTopic:
    Value: !Ref NewObjectSNSTopic
  NewObjectQueue:
    Value: !Ref NewObjectQueue
    